name: Deploy to Kubernetes on EC2

on:
  workflow_dispatch:
    inputs:
      IMAGE_TAG:
        description: "Tag for the Docker image"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_REPOSITORY: ${{ vars.DOCKER_HUB_USERNAME }}/${{ vars.DOCKER_HUB_REPOSITORY }}
      IMAGE_NAME: ${{ vars.DOCKER_HUB_REPOSITORY }}
      IMAGE_TAG: ${{ github.event.inputs.IMAGE_TAG }}
      KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG_CONTENT }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure kubeconfig for the cluster
        run: |
          mkdir -p ~/.kube
          echo ${{ env.KUBECONFIG_CONTENT }} | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Verify kubectl connection
        run: |
          kubectl config view
          kubectl cluster-info
          kubectl get nodes

      - name: Prepare deployment file with secrets
        run: |
          # Print initial deployment.yml
          echo "Before replacement:"
          cat deployment.yml
          
          # Replace placeholders in the deployment file
          sed -i "s|image: PLACEHOLDER_IMAGE|image: ${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.IMAGE_TAG }}|" deployment.yml
          sed -i "s|value: PLACEHOLDER_HOST|value: ${{ secrets.DATABASE_HOST }}|" deployment.yml
          sed -i "s|value: PLACEHOLDER_PORT|value: ${{ secrets.DATABASE_PORT }}|" deployment.yml
          sed -i "s|value: PLACEHOLDER_USER|value: ${{ secrets.DATABASE_USER }}|" deployment.yml
          sed -i "s|value: PLACEHOLDER_PASSWORD|value: ${{ secrets.DATABASE_PASSWORD }}|" deployment.yml
          sed -i "s|value: PLACEHOLDER_NAME|value: ${{ secrets.DATABASE_NAME }}|" deployment.yml
          
          # Print modified deployment.yml
          echo "After replacement:"
          cat deployment.yml

      - name: Apply deployment
        run: |
          kubectl apply -f deployment.yml
          kubectl get deployments
          kubectl get pods